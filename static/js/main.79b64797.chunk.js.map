{"version":3,"sources":["CorruptionCalc.tsx","NavBar.tsx","index.tsx"],"names":["StyledInput","style","width","Input","fluid","labeled","labelPosition","type","name","this","props","onChange","value","Label","content","step","Component","CorruptionCalc","state","mod","c","mon","calcMon","bind","calculateCoT","e","d","newData","update","$set","setState","modifier","months","i","Container","Segment","inverted","Header","as","Divider","Grid","padding","paddingTop","Row","Button","onClick","NavBar","Menu","attached","Item","Image","src","size","spaced","header","href","avatar","position","Dropdown","item","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWAIMA,E,4JAEJ,WACE,OACE,qBAAKC,MAAO,CAAEC,MAAO,OAArB,SACE,eAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,SAAO,EAACC,cAAc,OAAOC,KAAK,SAASC,KAAMC,KAAKC,MAAMF,KAAMG,SAAUF,KAAKC,MAAMC,SAAUC,MAAOH,KAAKC,MAAME,MAAhI,UACE,cAACC,EAAA,EAAD,CAAOZ,MAAO,CAAEC,MAAO,OAASY,QAASL,KAAKC,MAAMI,UACpD,uBAAOC,KAAK,kB,GAPIC,aA+FXC,E,kDAhFb,WAAYP,GAAa,IAAD,8BACtB,cAAMA,IAEDQ,MAAQ,CACXC,IAAK,EACLC,EAAG,EACHC,IAAK,EACLC,QAAS,GAGX,EAAKX,SAAW,EAAKA,SAASY,KAAd,gBAChB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAXE,E,4CAcxB,SAASE,EAAQC,GACf,IAAIC,EAGAA,EAFW,MAAXD,EAAElB,KACAkB,EAAEd,MAAQ,IACFgB,IAAOnB,KAAKS,MAAN,eAAgBQ,EAAElB,KAAO,CAAEqB,KAAM,OACxCH,EAAEd,MAAQ,EACTgB,IAAOnB,KAAKS,MAAN,eAAgBQ,EAAElB,KAAO,CAAEqB,KAAM,KAEvCD,IAAOnB,KAAKS,MAAN,eAAgBQ,EAAElB,KAAO,CAAEqB,KAAMH,EAAEd,SAEjC,QAAXc,EAAElB,MACPkB,EAAEd,MAAQ,EACFgB,IAAOnB,KAAKS,MAAN,eAAgBQ,EAAElB,KAAO,CAAEqB,KAAM,KAKzCD,IAAOnB,KAAKS,MAAN,eAAgBQ,EAAElB,KAAO,CAAEqB,KAAMH,EAAEd,SAKrDH,KAAKqB,SAASH,K,0BAGhB,SAAaR,EAAaC,EAAWC,GAMnC,IAJA,IAAIU,EAAmBZ,EAEnBa,EAAiBX,EAGfY,EAAyB,EAJNb,EAKvBa,EAAI,EACJA,EAAIA,EAAU,EAAJA,GAAS,GAAM,GAAkB,EAAXF,EAAe,GAE/CC,IAEF,IAAML,EAAUC,IAAOnB,KAAKS,MAAO,CAAEI,QAAS,CAAEO,KAAMG,KAEtDvB,KAAKqB,SAASH,K,oBAGhB,WAAU,IAAD,OACP,OACE,cAACO,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAASC,UAAQ,EAAjB,UACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAKxB,QAAQ,0BACxB,cAACyB,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAMvC,MAAO,CAAEwC,QAAS,OAAQC,WAAY,OAA5C,UACE,cAACF,EAAA,EAAKG,IAAN,UACE,cAAC,EAAD,CAAanC,KAAK,MAAMI,MAAOH,KAAKS,MAAMC,IAAKR,SAAUF,KAAKE,SAAUG,QAAQ,eAElF,cAAC0B,EAAA,EAAKG,IAAN,UACE,cAAC,EAAD,CAAanC,KAAK,IAAII,MAAOH,KAAKS,MAAME,EAAGT,SAAUF,KAAKE,SAAUG,QAAQ,iBAG9E,cAACD,EAAA,EAAD,CAAOC,QAAS,gBAAkBL,KAAKS,MAAMI,QAAU,kCACvD,cAACsB,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKrB,aAAa,EAAKN,MAAMC,IAAK,EAAKD,MAAME,EAAG,EAAKF,MAAMG,oB,GAzEjEL,a,2BCqBd8B,E,4JAnCX,WACI,OACI,eAACC,EAAA,EAAD,CAAMC,SAAS,SAASZ,UAAQ,EAAhC,UACI,cAACW,EAAA,EAAKE,KAAN,CAAWhD,MAAO,CAAEwC,QAAS,GAA7B,SACI,cAACS,EAAA,EAAD,CAAOC,IAAI,2FAA2FC,KAAK,OAAOC,OAAO,YAE7H,cAACN,EAAA,EAAKE,KAAN,CAAWK,QAAM,EAAjB,+BAUA,eAACP,EAAA,EAAKE,KAAN,CAAW7C,OAAK,EAACmD,KAAK,+BAAtB,cAAwD,cAACL,EAAA,EAAD,CAAOC,IAAI,2CAA2CK,QAAM,EAACJ,KAAK,OAAOC,OAAO,UAAxI,0BACA,eAACN,EAAA,EAAKA,KAAN,CAAWU,SAAS,QAApB,UACI,cAACC,EAAA,EAAD,CAAUC,MAAI,EAACC,KAAK,QAApB,SACI,cAACF,EAAA,EAASX,KAAV,UACI,eAACW,EAAA,EAAST,KAAV,CAAenC,QAAQ,UAAvB,UACI,cAACoC,EAAA,EAAD,CAAOC,IAAI,6FADf,YAMR,cAACJ,EAAA,EAAKE,KAAN,CACInC,QAAQ,mB,GA5BXE,aCIrB6C,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.79b64797.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Container, Divider, Grid, Header, Input, Label, Placeholder, Segment } from 'semantic-ui-react';\nimport update from 'immutability-helper';\n\nclass StyledInput extends Component<{ name: string, onChange: any, value: any, content: string }, {}> {\n\n  render() {\n    return (\n      <div style={{ width: '30%' }}>\n        <Input fluid labeled labelPosition='left' type='number' name={this.props.name} onChange={this.props.onChange} value={this.props.value} >\n          <Label style={{ width: '50%' }} content={this.props.content} />\n          <input step='0.01' />\n        </Input>\n      </div>\n    );\n  }\n}\n\nclass CorruptionCalc extends Component<{}, { mod: number, c: number, mon: number, calcMon: number }>  {\n  constructor(props: any) {\n    super(props)\n\n    this.state = {\n      mod: 0,\n      c: 0,\n      mon: 0,\n      calcMon: 0\n    }\n\n    this.onChange = this.onChange.bind(this);\n    this.calculateCoT = this.calculateCoT.bind(this);\n  }\n\n  onChange(e: any, d: any) {\n    let newData: any;\n    if (d.name === 'c') {\n      if (d.value > 100) {\n        newData = update(this.state, { [d.name]: { $set: 100 } });\n      } else if (d.value < 0) {\n        newData = update(this.state, { [d.name]: { $set: 0 } });\n      } else {\n        newData = update(this.state, { [d.name]: { $set: d.value } });\n      }\n    } else if (d.name === 'mod') {\n      if (d.value > 0) {\n        newData = update(this.state, { [d.name]: { $set: 0 } });\n      } else {\n        newData = update(this.state, { [d.name]: { $set: d.value } });\n      }\n    } else {\n      newData = update(this.state, { [d.name]: { $set: d.value } });\n    }\n\n\n\n    this.setState(newData);\n  }\n\n  calculateCoT(mod: number, c: number, mon: number) {\n\n    let modifier: number = mod;\n    let corruption: number = c;\n    let months: number = mon;\n\n    for (\n      let i: number = corruption * 1;\n      i > 0;\n      i = i + ((i * 1 / -20) / 12) + (modifier * 1 / 12)\n    ) {\n      months++;\n    }\n    const newData = update(this.state, { calcMon: { $set: months } });\n\n    this.setState(newData);\n  }\n\n  render() {\n    return (\n      <Container>\n        <Segment inverted>\n          <Header as='h2' content='Corruption Calculator' />\n          <Divider />\n          <Grid style={{ padding: '14px', paddingTop: '0px' }} >\n            <Grid.Row>\n              <StyledInput name='mod' value={this.state.mod} onChange={this.onChange} content='Modifier' />\n            </Grid.Row>\n            <Grid.Row>\n              <StyledInput name='c' value={this.state.c} onChange={this.onChange} content='Corruption' />\n            </Grid.Row>\n            {/* <StyledInput name='mon' value={this.state.mon} onChange={this.onChange} content='Months' /> */}\n            <Label content={'It will take ' + this.state.calcMon + ' months to burn to the ground'} />\n            <Button onClick={() => this.calculateCoT(this.state.mod, this.state.c, this.state.mon)} />\n          </Grid>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default CorruptionCalc;\n","import React, { Component } from 'react';\r\nimport { Menu, Dropdown, Image, Input } from 'semantic-ui-react';\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <Menu attached='bottom' inverted>\r\n                <Menu.Item style={{ padding: 5 }} >\r\n                    <Image src='https://cdn.discordapp.com/attachments/236152279839801344/868161637671137300/unknown.png' size='mini' spaced='right' />\r\n                </Menu.Item>\r\n                <Menu.Item header>\r\n                    LaceSlick exists.\r\n                </Menu.Item>\r\n                {/* <Menu.Item fitted >\r\n                    <Input list='projects' placeholder='Search...' icon='search' />\r\n                    <datalist id='projects'>\r\n                        <option value='Corruption Calculator'>Corruption Calculator</option>\r\n                        <option value='Home'>Home</option>\r\n                    </datalist>\r\n                </Menu.Item> */}\r\n                <Menu.Item fluid href='https://teavana-t.github.io/'  > <Image src='http://stop-it.get-some.help/8RjBBvi.png' avatar size='mini' spaced='right' /> Powered by Teavana </Menu.Item>\r\n                <Menu.Menu position='right'>\r\n                    <Dropdown item text=\"Tools\">\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item content=\"haha pp\" >\r\n                                <Image src='https://cdn.discordapp.com/attachments/236152279839801344/868161871721680936/unknown.png' />\r\n                                pp\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Menu.Item\r\n                        content=\"Home\"\r\n                    />\r\n                </Menu.Menu>\r\n            </Menu>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport CorruptionCalc from './CorruptionCalc';\nimport NavBar from './NavBar';\n\nReactDOM.render(\n  <React.StrictMode>\n    <NavBar />\n    <CorruptionCalc />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}